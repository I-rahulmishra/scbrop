It looks like the issue is in the changeHandler function. Specifically, when handling the annual_income and preferred_credit_limit fields, if the entered value is less than 1000, you are setting an error and preventing updates to defaultValue.

Possible Fix:

Modify your condition in changeHandler so that values below 1000 are still allowed but show an error, instead of blocking the input.

Fix Code in changeHandler

Replace:

if (isNaN(value) || value < 1000) {
  setErrors(`Please enter ${props.data.rwb_label_name} ${errorMsg.minValue}`);
} else if (value > 250000) {
  setErrors(`Please enter ${props.data.rwb_label_name} ${errorMsg.maxValue}`)
} else {
  setErrors("");
}

With:

if (isNaN(value)) {
  setErrors(`Please enter a valid number`);
} else if (value < 1000) {
  setErrors(`Minimum allowed value is 1000`);
} else if (value > 250000) {
  setErrors(`Maximum allowed value is 250000`);
} else {
  setErrors("");
}
setDefaultValue(event.target.value); // Ensure the value updates regardless of errors
props.handleCallback(props.data, event.target.value);
dispatch(isFieldUpdate(props, event.target.value, props.data.logical_field_name));

Why This Works?

The user can still input values below 1000, but an error message will be displayed.

setDefaultValue(event.target.value) ensures the value updates properly.

The validation logic remains intact.


Try this fix and see if you can now enter values freely while still getting error messages when needed.

